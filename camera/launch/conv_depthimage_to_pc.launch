<launch>

<!--
 To distinguish between the cases where the rgb image is
 1280x1024 versus 640x480.  This affects the pipeline.
 -->
 <arg name="high_res_rgb" default="true"/>
 <arg name="cloud_input_ns" value="camera/rgb_downsampled"
      if="$(arg high_res_rgb)"/>
 <arg name="cloud_input_ns" value="camera/rgb" unless="$(arg high_res_rgb)"/>

 <!-- Nodelet manager for this pipeline -->
 <node pkg="nodelet" type="nodelet" args="manager"
       name="record_player_manager" output="screen"/>

 <!-- Debayer and undistort the rgb image
      TODO: this should be split into nodelets -->
 <node
   pkg="image_proc"
   type="image_proc"
   name="ip_node1"
   ns="camera/rgb"
   />


 <!-- The depth image is already rectified and registered
      to the camera optical frame, but stored in mm; convert it
      to meters -->
 <node pkg="nodelet" type="nodelet" name="metric_rect"
       args="load depth_image_proc/convert_metric record_player_manager --no-bond">
   <remap from="image_raw" to="camera/depth/image"/>
   <remap from="image" to="camera/depth/image_m"/>
 </node>

 <!-- Convert it into a point cloud -->
 <node pkg="nodelet" type="nodelet" name="cloudify"
       args="load depth_image_proc/point_cloud_xyz record_player_manager --no-bond">
   <remap from="image_rect" to="camera/depth/image_m"/>
   <remap from="points" to="camera/depth_registered/points"/>
   <remap from="camera_info" to="camera/depth/camera_info"/>
 </node>

</launch>
